/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pro.novatech.solutions.bmoffice.ui.frames.admin;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;
import pro.novatech.solutions.bmoffice.jpa.entities.User;
import pro.novatech.solutions.bmoffice.jpa.entities.controllers.UserController;
import pro.novatech.solutions.bmoffice.jpa.entities.controllers.exceptions.NonexistentEntityException;
import pro.novatech.solutions.bmoffice.utilities.Validate;

/**
 *
 * @author Esther Mutombo
 */
public class UserView extends javax.swing.JInternalFrame {

    /**
     * Creates new form UserView
     */
    public UserView() {
        initComponents();
        users = new UserController().getPosUsers();
        bindTable(users);

        userTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                try {

                    User user = users.get(userTable.getSelectedRow());
                    name_txt.setText(user.getName());
                    password_txt.setText(user.getPassword());
                    username_txt.setText(user.getUsername());
                    surname_txt.setText(user.getSurname());
                    add_user_btn.setText("SAVE");
                    delete_btn.setEnabled(true);

                } catch (Exception ex) {
                }

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        name_txt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        surname_txt = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        username_txt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        password_txt = new javax.swing.JPasswordField();
        delete_btn = new javax.swing.JButton();
        add_user_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel5 = new javax.swing.JLabel();

        setTitle("Pos Users in the system");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridLayout(1, 2, 2, 2));

        jPanel2.setLayout(new java.awt.GridLayout(3, 2, 2, 12));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Name:");
        jPanel2.add(jLabel1);
        jPanel2.add(name_txt);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Surname:");
        jPanel2.add(jLabel2);
        jPanel2.add(surname_txt);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(3, 2, 2, 12));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Username:");
        jPanel3.add(jLabel3);
        jPanel3.add(username_txt);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Password:");
        jPanel3.add(jLabel4);
        jPanel3.add(password_txt);

        delete_btn.setText("DELETE");
        delete_btn.setEnabled(false);
        delete_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_btnActionPerformed(evt);
            }
        });
        jPanel3.add(delete_btn);

        add_user_btn.setText("ADD");
        add_user_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_user_btnActionPerformed(evt);
            }
        });
        jPanel3.add(add_user_btn);

        jPanel1.add(jPanel3);

        getContentPane().add(jPanel1);

        userTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        userTable.setRowHeight(32);
        jScrollPane1.setViewportView(userTable);

        getContentPane().add(jScrollPane1);

        jToolBar1.setRollover(true);
        jToolBar1.add(jLabel5);

        getContentPane().add(jToolBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void add_user_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_user_btnActionPerformed
        // TODO add your handling code here:
        if (validated()) {
            UserController userController = new UserController();
            if (userTable.getSelectedRowCount() == 0) {
                User user = new User();

                user.setName(name_txt.getText());
                user.setSurname(surname_txt.getText());
                user.setPassword(password_txt.getText());
                user.setUsername(username_txt.getText());
                user.setRole("pos_user");
                user.setCreatedAt(new Date());
                user.setUpdatedAt(new Date());
                userController.create(user);
            } else {
                User user = users.get(userTable.getSelectedRow());
                user.setSurname(surname_txt.getText());
                user.setPassword(password_txt.getText());
                user.setUsername(username_txt.getText());
                user.setName(name_txt.getText());
                try {
                    userController.edit(user);
                } catch (Exception ex) {
                }
            }
            userTable.clearSelection();

            users = userController.getPosUsers();
            bindTable(users);

        }

    }//GEN-LAST:event_add_user_btnActionPerformed

    private void delete_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_btnActionPerformed
        // TODO add your handling code here:

        User user = users.get(userTable.getSelectedRow());
        if (JOptionPane.showConfirmDialog(this, "Are you sure to delete" + user.getName() + " ?", "Confirmation", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            try {
                new UserController().destroy(user.getId());
                users = new UserController().getPosUsers();
                bindTable(users);
            } catch (NonexistentEntityException ex) {

            }

        }

    }//GEN-LAST:event_delete_btnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_user_btn;
    private javax.swing.JButton delete_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField name_txt;
    private javax.swing.JPasswordField password_txt;
    private javax.swing.JTextField surname_txt;
    private javax.swing.JTable userTable;
    private javax.swing.JTextField username_txt;
    // End of variables declaration//GEN-END:variables
    private List<User> users = new ArrayList<>();
    private JTableBinding jTableBinding;

    private void bindTable(List<User> users) {
        jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ, users, userTable);
        JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(BeanProperty.create("name"));
        columnBinding.setColumnClass(String.class);
        columnBinding.setColumnName("Name");
        columnBinding.setEditable(false);

        columnBinding = jTableBinding.addColumnBinding(BeanProperty.create("surname"));
        columnBinding.setColumnClass(String.class);
        columnBinding.setColumnName("Surname");
        columnBinding.setEditable(false);

        columnBinding = jTableBinding.addColumnBinding(BeanProperty.create("username"));
        columnBinding.setColumnClass(String.class);
        columnBinding.setColumnName("Username");
        columnBinding.setEditable(false);

        columnBinding = jTableBinding.addColumnBinding(BeanProperty.create("password"));
        columnBinding.setColumnClass(String.class);
        columnBinding.setColumnName("Password");
        columnBinding.setEditable(false);

        jTableBinding.bind();
        add_user_btn.setText("ADD USER");
        delete_btn.setEnabled(false);

        name_txt.setText("");
        password_txt.setText("");
        username_txt.setText("");
        surname_txt.setText("");
        password_txt.setText("");

    }

    private boolean validated() {
        boolean is_valid = false;
        if (name_txt.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Name is required", "Error", JOptionPane.ERROR_MESSAGE);
            name_txt.requestFocus();
        } else if (username_txt.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "sSername is required", "Error", JOptionPane.ERROR_MESSAGE);
            username_txt.requestFocus();
        } else if (surname_txt.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Surname is required", "Error", JOptionPane.ERROR_MESSAGE);
            surname_txt.requestFocus();
        } else if (password_txt.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Password is required", "Error", JOptionPane.ERROR_MESSAGE);
            password_txt.requestFocus();
        } else {
            is_valid = true;
        }

        return is_valid;
    }
}
