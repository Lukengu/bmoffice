/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pro.novatech.solutions.bmoffice.ui.frames.admin;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;
import pro.novatech.solutions.bmoffice.jpa.entities.Product;
import pro.novatech.solutions.bmoffice.jpa.entities.controllers.ProductController;
import pro.novatech.solutions.bmoffice.utilities.Validate;

/**
 *
 * @author Esther Mutombo
 */
public class AdminProductView extends javax.swing.JInternalFrame {

    /**
     * Creates new form ProductView
     */
    public AdminProductView() {
        initComponents();
        products = new ProductController().findAll();
        bindTable(products);

        productTable.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                try {
                    addProduct.setText("Save");
                    Product product = products.get(productTable.getSelectedRow());
                    product_name.setText(product.getName().trim());
                    unit_price.setText(String.valueOf(product.getPrice()));
                    qty.setValue(product.getInStock());
                    product_code.setText(product.getProductCode());
                } catch (Exception ex) {
                }

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        product_code = new javax.swing.JTextField();
        product_name = new javax.swing.JTextField();
        unit_price = new javax.swing.JTextField();
        qty = new javax.swing.JSpinner();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        addProduct = new javax.swing.JButton();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        product_label = new javax.swing.JLabel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setMaximizable(true);
        setTitle("Products  in the system");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        formPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        formPanel.setLayout(new java.awt.GridLayout(4, 4, 4, 4));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Product Code");
        formPanel.add(jLabel1);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Product Name");
        formPanel.add(jLabel2);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Unit Price");
        formPanel.add(jLabel3);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Qty In Stock");
        formPanel.add(jLabel4);

        product_code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                product_codeKeyPressed(evt);
            }
        });
        formPanel.add(product_code);
        formPanel.add(product_name);
        formPanel.add(unit_price);

        qty.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        formPanel.add(qty);
        formPanel.add(filler1);
        formPanel.add(filler2);
        formPanel.add(filler3);

        addProduct.setText("ADD");
        addProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductActionPerformed(evt);
            }
        });
        formPanel.add(addProduct);
        formPanel.add(filler6);
        formPanel.add(filler5);

        getContentPane().add(formPanel);

        productTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        productTable.setRowHeight(32);
        productTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        productTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        productTable.setShowGrid(true);
        jScrollPane1.setViewportView(productTable);

        getContentPane().add(jScrollPane1);

        jToolBar1.setRollover(true);
        jToolBar1.setMaximumSize(new java.awt.Dimension(65578, 25));

        product_label.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        product_label.setText("Page ");
        jToolBar1.add(product_label);
        jToolBar1.add(filler4);

        jPanel1.setLayout(new java.awt.GridLayout(1, 7, 10, 0));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("<<");
        jPanel1.add(jButton1);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("<");
        jPanel1.add(jButton2);
        jPanel1.add(jLabel9);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton3.setText(">");
        jPanel1.add(jButton3);

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton4.setText(">>");
        jPanel1.add(jButton4);

        jToolBar1.add(jPanel1);

        getContentPane().add(jToolBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductActionPerformed
        // TODO add your handling code here:
        if (validated()) {

            ProductController productController = new ProductController();
            Product product = null;
            productTable.clearSelection();

            try {
                product = productController.findByProductCode(product_code.getText());
                if (product.getId() == null) {
                    product = new Product();
                    product.setProductCode(product_code.getText());
                    product.setName(product_name.getText());
                    product.setInStock(Integer.parseInt(qty.getValue().toString()));
                    product.setPrice(Double.parseDouble(unit_price.getText()));

                    productController.create(product);
                } else {
                    product.setProductCode(product_code.getText());
                    product.setName(product_name.getText());
                    product.setInStock(Integer.parseInt(qty.getValue().toString())
                    );
                    product.setPrice(Double.parseDouble(unit_price.getText()));
                    productController.edit(product);
                }

            } catch (Exception ex) {
                product = new Product();
                product.setProductCode(product_code.getText());
                product.setName(product_name.getText());
                product.setInStock(Integer.parseInt(qty.getValue().toString()));
                product.setPrice(Double.parseDouble(unit_price.getText()));

                productController.create(product);
            }

            products = productController.findAll();
            bindTable(products);

            product_code.setText("");
            product_name.setText("");
            unit_price.setText("");
            qty.setValue(1);
            addProduct.setText("Add");

        }
    }//GEN-LAST:event_addProductActionPerformed

    private void product_codeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_product_codeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_TAB
                || evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            ProductController productController = new ProductController();
            try {
                Product product = productController.findByProductCode(product_code.getText());
                product_name.setText(product.getName().trim());
                unit_price.setText(String.valueOf(product.getPrice()));

                qty.setValue(product.getInStock());
                addProduct.setText("Save");
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        }

    }//GEN-LAST:event_product_codeKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addProduct;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.JPanel formPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField product_code;
    private javax.swing.JLabel product_label;
    private javax.swing.JTextField product_name;
    private javax.swing.JSpinner qty;
    private javax.swing.JTextField unit_price;
    // End of variables declaration//GEN-END:variables
    List<Product> products = new ArrayList<>();
    JTableBinding jTableBinding;

    private void bindTable(List<Product> products) {
        products = new ProductController().findAll();
        jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ, products, productTable);
        JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(BeanProperty.create("name"));
        columnBinding.setColumnClass(String.class);
        columnBinding.setColumnName("Name");
        columnBinding.setEditable(false);

        columnBinding = jTableBinding.addColumnBinding(BeanProperty.create("productCode"));
        columnBinding.setColumnClass(String.class);
        columnBinding.setColumnName("Code");
        columnBinding.setEditable(false);

        columnBinding = jTableBinding.addColumnBinding(BeanProperty.create("price"));
        columnBinding.setColumnClass(Double.class);
        columnBinding.setColumnName("Price");
        columnBinding.setEditable(false);

        columnBinding = jTableBinding.addColumnBinding(BeanProperty.create("inStock"));
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setColumnName("Stock Size");
        columnBinding.setEditable(false);

        jTableBinding.bind();
        product_label.setText(products.size() + " Products in the system");

    }

    private boolean validated() {
        boolean is_valid = false;
        if (product_code.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Product Code is required", "Error", JOptionPane.ERROR_MESSAGE);
            product_code.requestFocus();
        } else if (product_name.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Product Name is required", "Error", JOptionPane.ERROR_MESSAGE);
            product_name.requestFocus();
        } else if (unit_price.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Unit price is required", "Error", JOptionPane.ERROR_MESSAGE);
            unit_price.requestFocus();
        } else if (!Validate.isDouble(unit_price.getText())) {
            JOptionPane.showMessageDialog(this, "Unit price should be a number", "Error", JOptionPane.ERROR_MESSAGE);
            unit_price.requestFocus();
        } else {
            is_valid = true;
        }

        return is_valid;
    }

}
